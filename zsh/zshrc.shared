setopt interactive_comments

###############################################################################################################
#                                         environment variables                                               #
###############################################################################################################

export PATH="$HOME/usr/bin:$PATH"
export LD_LIBRARY_PATH="$HOME/usr/lib:$LD_LIBRARY_PATH"
export VISUAL=nvim
export EDITOR=nvim

###############################################################################################################
#                                           general settings                                                  #
###############################################################################################################

autoload -U colors && colors
if whence dircolors >/dev/null; then
  eval "$(dircolors $HOME/.zsh/dircolors-solarized/dircolors.256dark)"
elif whence gdircolors >/dev/null; then
  eval "$(gdircolors $HOME/.zsh/dircolors-solarized/dircolors.256dark)"
fi

setopt extended_glob
unsetopt correct_all
setopt no_hup
setopt no_check_jobs
export KEYTIMEOUT=10

###############################################################################################################
#                                               history                                                       #
###############################################################################################################

export HISTFILE="$HOME/.zsh_history"
export HISTSIZE=100000
export SAVEHIST=1000000
setopt append_history
setopt extended_history
setopt inc_append_history
setopt hist_ignore_all_dups
setopt share_history

###############################################################################################################
#                                            vim inner motions                                                #
###############################################################################################################

autoload -U select-quoted
autoload -U select-bracketed
zle -N select-quoted
zle -N select-bracketed

for mode in visual viopp; do
  for keymap in {a,i}{\',\",\`}; do
    bindkey -M "$mode" "$keymap" select-quoted
  done
done

for mode in visual viopp; do
  for keymap in {a,i}{\(,\),\[,\],\{,\},\<,\>,b,B}; do
    bindkey -M "$mode" "$keymap" select-bracketed
  done
done

###############################################################################################################
#                                               vim mode                                                      #
###############################################################################################################

bindkey -v
bindkey -M viins '\e' magic-space
bindkey -M viins 'jk' vi-cmd-mode
bindkey "^?" backward-delete-char

###############################################################################################################
#                                            powerlevel10k prompt                                             #
###############################################################################################################

if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source ~/powerlevel10k/powerlevel10k.zsh-theme

[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

###############################################################################################################
#                                             tab completion                                                  #
###############################################################################################################

autoload -U compinit && compinit
setopt menu_complete
zmodload zsh/complist

zstyle ':completion:*' menu select=1
zstyle ':completion:*' matcher-list '' 'r:|?=** m:{a-z\-}={A-Z\_}'
zstyle ':completion:*:default' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' file-sort modification
bindkey -M menuselect '^[[Z' reverse-menu-complete

###############################################################################################################
#                                       zsh-history-substring-search                                          #
###############################################################################################################

source "$HOME/.zsh/plugins/zsh-history-substring-search/zsh-history-substring-search.zsh"
bindkey -M vicmd 'j' history-substring-search-down
bindkey -M vicmd 'k' history-substring-search-up

###############################################################################################################
#                                        fast-syntax-highlighting                                             #
###############################################################################################################

source "$HOME/.zsh/plugins/fast-syntax-highlighting/fast-syntax-highlighting.plugin.zsh"
FAST_HIGHLIGHT_STYLES[path]='fg=white,bold'
FAST_HIGHLIGHT_STYLES[path-to-dir]='fg=white,bold'

###############################################################################################################
#                                              extract                                                        #
###############################################################################################################

source "$HOME/.zsh/plugins/extract/extract.plugin.zsh"

###############################################################################################################
#                                               fzf                                                           #
###############################################################################################################

export FZF_DEFAULT_COMMAND='rg --files'
export FZF_DEFAULT_OPTS="--reverse"

###############################################################################################################
#                                             functions                                                       #
###############################################################################################################

k() {
  local pids
  pids=$(ps -ef | sed 1d | multi_select_fzf | awk '{print $2}')
  if [[ "$pids" ]]
  then
    echo "$pids" | xargs kill -${1:-15}
  fi
}

find_subdirs() {
  find . -path '*/\.*' -prune -o -type d -print 2> /dev/null
}

find_subfiles() {
  rg --files
}

locate_ignorecase() {
  locate -i "${1:-/}"
}

fasd_cd() {
  fasd -A "$@" && cd "$@"
}

fasd_nvim() {
  fasd -A "$@" && nvim "$@"
}

multi_select_fzf() {
  fzf -m
}

single_select_fzf() {
  fzf +m
}

d() {
  local dir
  if [ $# -eq 0 ]
  then
        dir=$(fasd -l -d | sed "s@$(pwd)\/@@" | single_select_fzf) && fasd_cd "$dir"
  else
        fasd_cd "$@"
  fi
}
compdef '_files -/' d

d.() {
  local dir
  dir="$(find_subdirs | single_select_fzf)" && fasd_cd "$dir"
}

d/() {
  local dir
  dir="$(locate_ignorecase $@ | single_select_fzf)" && fasd_cd "$dir"
}

g.() {
  git l | single_select_fzf | grep -o -m1 '[a-zA-Z0-9]\{6,\}' | head -1
}

h.() {
  git diff --name-only --relative | single_select_fzf
}

v() {
  local file
  if [ $# -eq 0 ]
  then
        file="$(fasd -l -f | single_select_fzf)" && fasd_nvim "$file"
  else
        fasd_nvim "$@"
  fi
}

v/() {
  local file
  file="$(locate_ignorecase $@ | single_select_fzf)" && fasd_nvim "$file"
}

v.() {
  local file
  file="$(find_subfiles | single_select_fzf)" && fasd_nvim "$file"
}

_fzf_branch() {
  local branches branch
  branches=$(git branch --sort=-committerdate | grep -v HEAD) &&
  branch=$(echo "$branches" | fzf -d $(( 2 + $(wc -l <<< "$branches") )) +m) &&
  echo "$branch" | sed "s/.* //" | sed "s@remotes/[^/]*/@@"
}

db() {
  local branch
  branch="$(_fzf_branch)" && git branch -d "$branch"
}

br() {
  local branch
  branch="$(_fzf_branch)" && git checkout "$branch"
}

t.() {
  tmuxcomplete | sort -u | fzf-tmux -d 90% +m
}

f.() {
  (find_subfiles; fasd -l) | fzf-tmux -d 90% +m
}

fzf-history-widget() {
  local selected num
  setopt localoptions noglobsubst noposixbuiltins pipefail no_aliases 2> /dev/null
  selected=( $(fc -rl 1 |
    FZF_DEFAULT_OPTS="$FZF_DEFAULT_OPTS -n2..,.. $FZF_CTRL_R_OPTS --query=${(qqq)LBUFFER} +m +s -e" fzf -d 90%) )
  local ret=$?
  if [ -n "$selected" ]; then
    num=$selected[1]
    if [ -n "$num" ]; then
      zle vi-fetch-history -n $num
    fi
  fi
  zle reset-prompt
  return $ret
}
zle -N fzf-history-widget
bindkey '^R' fzf-history-widget

###############################################################################################################
#                                              aliases                                                        #
###############################################################################################################

alias g='git'
alias x='extract'
alias b='bat'
alias fd='find_subfiles | rg'
alias rg='rg --smart-case'
